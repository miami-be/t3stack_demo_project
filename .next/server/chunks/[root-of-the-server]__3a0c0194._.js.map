{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///Users/miami/Projects/t3stack_demo_project/src/env.js"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\nimport { z } from \"zod\";\n\nexport const env = createEnv({\n  /**\n   * Specify your server-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars.\n   */\n  server: {\n    AUTH_SECRET:\n      process.env.NODE_ENV === \"production\"\n        ? z.string()\n        : z.string().optional(),\n\n    DATABASE_URL: z.string().url(),\n    NODE_ENV: z\n      .enum([\"development\", \"test\", \"production\"])\n      .default(\"development\"),\n  },\n\n  /**\n   * Specify your client-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars. To expose them to the client, prefix them with\n   * `NEXT_PUBLIC_`.\n   */\n  client: {\n    // NEXT_PUBLIC_CLIENTVAR: z.string(),\n  },\n\n  /**\n   * You can't destruct `process.env` as a regular object in the Next.js edge runtimes (e.g.\n   * middlewares) or client-side so we need to destruct manually.\n   */\n  runtimeEnv: {\n    AUTH_SECRET: process.env.AUTH_SECRET,\n\n    DATABASE_URL: process.env.DATABASE_URL,\n    NODE_ENV: process.env.NODE_ENV,\n  },\n  /**\n   * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation. This is especially\n   * useful for Docker builds.\n   */\n  skipValidation: !!process.env.SKIP_ENV_VALIDATION,\n  /**\n   * Makes it so that empty strings are treated as undefined. `SOME_VAR: z.string()` and\n   * `SOME_VAR=''` will throw an error.\n   */\n  emptyStringAsUndefined: true,\n});\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,MAAM,CAAA,GAAA,+JAAA,CAAA,YAAS,AAAD,EAAE;IAC3B;;;GAGC,GACD,QAAQ;QACN,aACE,6EAEI,sIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QAEzB,cAAc,sIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QAC5B,UAAU,sIAAA,CAAA,IAAC,CACR,IAAI,CAAC;YAAC;YAAe;YAAQ;SAAa,EAC1C,OAAO,CAAC;IACb;IAEA;;;;GAIC,GACD,QAAQ;IAER;IAEA;;;GAGC,GACD,YAAY;QACV,aAAa,QAAQ,GAAG,CAAC,WAAW;QAEpC,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,QAAQ;IACV;IACA;;;GAGC,GACD,gBAAgB,CAAC,CAAC,QAAQ,GAAG,CAAC,mBAAmB;IACjD;;;GAGC,GACD,wBAAwB;AAC1B","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///Users/miami/Projects/t3stack_demo_project/src/server/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nimport { env } from \"~/env\";\n\nconst createPrismaClient = () =>\n  new PrismaClient({\n    log:\n      env.NODE_ENV === \"development\" ? [\"query\", \"error\", \"warn\"] : [\"error\"],\n  });\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: ReturnType<typeof createPrismaClient> | undefined;\n};\n\nexport const db = globalForPrisma.prisma ?? createPrismaClient();\n\nif (env.NODE_ENV !== \"production\") globalForPrisma.prisma = db;\n"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEA,MAAM,qBAAqB,IACzB,IAAI,6HAAA,CAAA,eAAY,CAAC;QACf,KACE,4GAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,gBAAgB;YAAC;YAAS;YAAS;SAAO,GAAG;YAAC;SAAQ;IAC3E;AAEF,MAAM,kBAAkB;AAIjB,MAAM,KAAK,gBAAgB,MAAM,IAAI;AAE5C,IAAI,4GAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,cAAc,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///Users/miami/Projects/t3stack_demo_project/src/app/api/suppliers/route.ts"],"sourcesContent":["import type { NextRequest } from \"next/server\";\nimport { NextResponse } from \"next/server\";\nimport { db } from \"~/server/db\";\n\n// GET /api/suppliers - List all suppliers\nexport async function GET() {\n  try {\n    const suppliers = await db.supplier.findMany({\n      orderBy: { name: \"asc\" },\n    });\n    return NextResponse.json(suppliers);\n  } catch (error) {\n    console.error(\"GET /api/suppliers error:\", error);\n    return NextResponse.json({ error: \"Failed to fetch suppliers\", details: String(error) }, { status: 500 });\n  }\n}\n\n// POST /api/suppliers - Create a new supplier\nexport async function POST(req: NextRequest) {\n  try {\n    type SupplierCreate = {\n      name: string;\n      contactName: string;\n      contactPhone: string;\n    };\n    const data = (await req.json()) as SupplierCreate;\n    const { name, contactName, contactPhone } = data;\n    if (!name || !contactName || !contactPhone) {\n      return NextResponse.json({ error: \"All fields are required.\" }, { status: 400 });\n    }\n    const supplier = await db.supplier.create({\n      data: { name, contactName, contactPhone },\n    });\n    return NextResponse.json(supplier);\n  } catch (error) {\n    console.error(\"POST /api/suppliers error:\", error);\n    return NextResponse.json({ error: \"Failed to create supplier\", details: String(error) }, { status: 500 });\n  }\n}\n\n// PUT /api/suppliers/:id - Update a supplier (handled as a catch-all route for demo)\nexport async function PUT(req: NextRequest) {\n  try {\n    const { searchParams } = new URL(req.url);\n    const id = searchParams.get(\"id\");\n    type SupplierUpdate = {\n      name: string;\n      contactName: string;\n      contactPhone: string;\n    };\n    const data = (await req.json()) as SupplierUpdate | null;\n    if (!id) {\n      return NextResponse.json({ error: \"Missing supplier id.\" }, { status: 400 });\n    }\n    if (!data) {\n      return NextResponse.json({ error: \"Missing data.\" }, { status: 400 });\n    }\n    const { name, contactName, contactPhone } = data;\n    const supplier = await db.supplier.update({\n      where: { id },\n      data: { name, contactName, contactPhone },\n    });\n    return NextResponse.json(supplier);\n  } catch (error) {\n    console.error(\"PUT /api/suppliers error:\", error);\n    return NextResponse.json({ error: \"Failed to update supplier\", details: String(error) }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,YAAY,MAAM,qHAAA,CAAA,KAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAC3C,SAAS;gBAAE,MAAM;YAAM;QACzB;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;YAA6B,SAAS,OAAO;QAAO,GAAG;YAAE,QAAQ;QAAI;IACzG;AACF;AAGO,eAAe,KAAK,GAAgB;IACzC,IAAI;QAMF,MAAM,OAAQ,MAAM,IAAI,IAAI;QAC5B,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG;QAC5C,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,cAAc;YAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA2B,GAAG;gBAAE,QAAQ;YAAI;QAChF;QACA,MAAM,WAAW,MAAM,qHAAA,CAAA,KAAE,CAAC,QAAQ,CAAC,MAAM,CAAC;YACxC,MAAM;gBAAE;gBAAM;gBAAa;YAAa;QAC1C;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;YAA6B,SAAS,OAAO;QAAO,GAAG;YAAE,QAAQ;QAAI;IACzG;AACF;AAGO,eAAe,IAAI,GAAgB;IACxC,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;QACxC,MAAM,KAAK,aAAa,GAAG,CAAC;QAM5B,MAAM,OAAQ,MAAM,IAAI,IAAI;QAC5B,IAAI,CAAC,IAAI;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAuB,GAAG;gBAAE,QAAQ;YAAI;QAC5E;QACA,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAgB,GAAG;gBAAE,QAAQ;YAAI;QACrE;QACA,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG;QAC5C,MAAM,WAAW,MAAM,qHAAA,CAAA,KAAE,CAAC,QAAQ,CAAC,MAAM,CAAC;YACxC,OAAO;gBAAE;YAAG;YACZ,MAAM;gBAAE;gBAAM;gBAAa;YAAa;QAC1C;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;YAA6B,SAAS,OAAO;QAAO,GAAG;YAAE,QAAQ;QAAI;IACzG;AACF","debugId":null}}]
}