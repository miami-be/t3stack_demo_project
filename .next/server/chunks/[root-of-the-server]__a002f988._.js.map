{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///Users/miami/Projects/t3stack_demo_project/src/app/api/ingredients/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { PrismaClient } from \"@prisma/client\";\n\nconst prisma = new PrismaClient();\n\n// GET: List all ingredients with measurement unit\nexport async function GET() {\n  const ingredients = await prisma.ingredient.findMany({\n    include: { measurementUnit: true },\n    orderBy: { createdAt: \"desc\" },\n  });\n  return NextResponse.json(ingredients);\n}\n\n// POST: Create a new ingredient\nexport async function POST(req: NextRequest) {\n  const data = await req.json();\n  const ingredient = await prisma.ingredient.create({\n    data: {\n      name: data.name,\n      quantity: Number(data.quantity),\n      cost: Number(data.cost),\n      supplier: data.supplier,\n      measurementUnitId: data.measurementUnitId,\n    },\n    include: { measurementUnit: true },\n  });\n  return NextResponse.json(ingredient);\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAGxB,eAAe;IACpB,MAAM,cAAc,MAAM,OAAO,UAAU,CAAC,QAAQ,CAAC;QACnD,SAAS;YAAE,iBAAiB;QAAK;QACjC,SAAS;YAAE,WAAW;QAAO;IAC/B;IACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B;AAGO,eAAe,KAAK,GAAgB;IACzC,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,MAAM,aAAa,MAAM,OAAO,UAAU,CAAC,MAAM,CAAC;QAChD,MAAM;YACJ,MAAM,KAAK,IAAI;YACf,UAAU,OAAO,KAAK,QAAQ;YAC9B,MAAM,OAAO,KAAK,IAAI;YACtB,UAAU,KAAK,QAAQ;YACvB,mBAAmB,KAAK,iBAAiB;QAC3C;QACA,SAAS;YAAE,iBAAiB;QAAK;IACnC;IACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B","debugId":null}}]
}