{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/miami/Projects/t3stack_demo_project/src/app/ingredients/page.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useState } from \"react\";\nimport { PrismaClient, MeasurementUnit, Ingredient } from \"@prisma/client\";\n\n// NOTE: In a real app, you would fetch data via API routes, not import Prisma directly in a Next.js page.\n// For demo purposes, this is simplified. In production, use API routes or server actions for DB access.\n\nexport default function IngredientsPage() {\n  const [ingredients, setIngredients] = useState<IngredientWithUnit[]>([]);\n  const [units, setUnits] = useState<MeasurementUnit[]>([]);\n  const [form, setForm] = useState<Partial<IngredientWithUnit>>({});\n  const [editingId, setEditingId] = useState<string | null>(null);\n\n  useEffect(() => {\n    fetch(\"/api/ingredients\").then(res => res.json()).then(setIngredients);\n    fetch(\"/api/measurement-units\").then(res => res.json()).then(setUnits);\n  }, []);\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  }\n\n  function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    const method = editingId ? \"PUT\" : \"POST\";\n    fetch(\"/api/ingredients\" + (editingId ? `/${editingId}` : \"\"), {\n      method,\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(form),\n    })\n      .then(res => res.json())\n      .then((updated) => {\n        setForm({});\n        setEditingId(null);\n        fetch(\"/api/ingredients\").then(res => res.json()).then(setIngredients);\n      });\n  }\n\n  function handleEdit(ingredient: IngredientWithUnit) {\n    setForm(ingredient);\n    setEditingId(ingredient.id);\n  }\n\n  function handleDelete(id: string) {\n    fetch(`/api/ingredients/${id}`, { method: \"DELETE\" })\n      .then(() => fetch(\"/api/ingredients\").then(res => res.json()).then(setIngredients));\n  }\n\n  return (\n    <div className=\"p-8 max-w-2xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">Ingredients</h1>\n      <form onSubmit={handleSubmit} className=\"mb-6 space-y-2\">\n        <input\n          name=\"name\"\n          placeholder=\"Name\"\n          value={form.name || \"\"}\n          onChange={handleChange}\n          className=\"border p-2 rounded w-full\"\n          required\n        />\n        <input\n          name=\"quantity\"\n          placeholder=\"Quantity\"\n          type=\"number\"\n          value={form.quantity || \"\"}\n          onChange={handleChange}\n          className=\"border p-2 rounded w-full\"\n          required\n        />\n        <input\n          name=\"cost\"\n          placeholder=\"Cost\"\n          type=\"number\"\n          value={form.cost || \"\"}\n          onChange={handleChange}\n          className=\"border p-2 rounded w-full\"\n          required\n        />\n        <input\n          name=\"supplier\"\n          placeholder=\"Supplier\"\n          value={form.supplier || \"\"}\n          onChange={handleChange}\n          className=\"border p-2 rounded w-full\"\n          required\n        />\n        <select\n          name=\"measurementUnitId\"\n          value={form.measurementUnitId || \"\"}\n          onChange={handleChange}\n          className=\"border p-2 rounded w-full\"\n          required\n        >\n          <option value=\"\">Select unit</option>\n          {units.map(u => (\n            <option key={u.id} value={u.id}>{u.name} ({u.code})</option>\n          ))}\n        </select>\n        <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded\">\n          {editingId ? \"Update\" : \"Add\"} Ingredient\n        </button>\n        {editingId && (\n          <button type=\"button\" className=\"ml-2 px-4 py-2 rounded border\" onClick={() => { setForm({}); setEditingId(null); }}>\n            Cancel\n          </button>\n        )}\n      </form>\n      <table className=\"w-full border\">\n        <thead>\n          <tr>\n            <th className=\"border p-2\">Name</th>\n            <th className=\"border p-2\">Quantity</th>\n            <th className=\"border p-2\">Unit</th>\n            <th className=\"border p-2\">Cost</th>\n            <th className=\"border p-2\">Supplier</th>\n            <th className=\"border p-2\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {ingredients.map(ingredient => (\n            <tr key={ingredient.id}>\n              <td className=\"border p-2\">{ingredient.name}</td>\n              <td className=\"border p-2\">{ingredient.quantity}</td>\n              <td className=\"border p-2\">{ingredient.measurementUnit?.name} ({ingredient.measurementUnit?.code})</td>\n              <td className=\"border p-2\">{ingredient.cost}</td>\n              <td className=\"border p-2\">{ingredient.supplier}</td>\n              <td className=\"border p-2\">\n                <button className=\"mr-2 text-blue-600\" onClick={() => handleEdit(ingredient)}>Edit</button>\n                <button className=\"text-red-600\" onClick={() => handleDelete(ingredient.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\n// Type for ingredient with measurement unit populated\ninterface IngredientWithUnit extends Ingredient {\n  measurementUnit?: MeasurementUnit;\n}\n"],"names":[],"mappings":";;;;AACA;;;AADA;;AAOe,SAAS;;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAwB,EAAE;IACvE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqB,EAAE;IACxD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA+B,CAAC;IAC/D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAE1D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,MAAM,oBAAoB,IAAI;6CAAC,CAAA,MAAO,IAAI,IAAI;4CAAI,IAAI,CAAC;YACvD,MAAM,0BAA0B,IAAI;6CAAC,CAAA,MAAO,IAAI,IAAI;4CAAI,IAAI,CAAC;QAC/D;oCAAG,EAAE;IAEL,SAAS,aAAa,CAA0D;QAC9E,QAAQ;YAAE,GAAG,IAAI;YAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QAAC;IACrD;IAEA,SAAS,aAAa,CAAkB;QACtC,EAAE,cAAc;QAChB,MAAM,SAAS,YAAY,QAAQ;QACnC,MAAM,qBAAqB,CAAC,YAAY,CAAC,CAAC,EAAE,WAAW,GAAG,EAAE,GAAG;YAC7D;YACA,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;QACvB,GACG,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI,IACpB,IAAI,CAAC,CAAC;YACL,QAAQ,CAAC;YACT,aAAa;YACb,MAAM,oBAAoB,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI,IAAI,IAAI,CAAC;QACzD;IACJ;IAEA,SAAS,WAAW,UAA8B;QAChD,QAAQ;QACR,aAAa,WAAW,EAAE;IAC5B;IAEA,SAAS,aAAa,EAAU;QAC9B,MAAM,CAAC,iBAAiB,EAAE,IAAI,EAAE;YAAE,QAAQ;QAAS,GAChD,IAAI,CAAC,IAAM,MAAM,oBAAoB,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI,IAAI,IAAI,CAAC;IACvE;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,6LAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,6LAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO,KAAK,IAAI,IAAI;wBACpB,UAAU;wBACV,WAAU;wBACV,QAAQ;;;;;;kCAEV,6LAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,MAAK;wBACL,OAAO,KAAK,QAAQ,IAAI;wBACxB,UAAU;wBACV,WAAU;wBACV,QAAQ;;;;;;kCAEV,6LAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,MAAK;wBACL,OAAO,KAAK,IAAI,IAAI;wBACpB,UAAU;wBACV,WAAU;wBACV,QAAQ;;;;;;kCAEV,6LAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO,KAAK,QAAQ,IAAI;wBACxB,UAAU;wBACV,WAAU;wBACV,QAAQ;;;;;;kCAEV,6LAAC;wBACC,MAAK;wBACL,OAAO,KAAK,iBAAiB,IAAI;wBACjC,UAAU;wBACV,WAAU;wBACV,QAAQ;;0CAER,6LAAC;gCAAO,OAAM;0CAAG;;;;;;4BAChB,MAAM,GAAG,CAAC,CAAA,kBACT,6LAAC;oCAAkB,OAAO,EAAE,EAAE;;wCAAG,EAAE,IAAI;wCAAC;wCAAG,EAAE,IAAI;wCAAC;;mCAArC,EAAE,EAAE;;;;;;;;;;;kCAGrB,6LAAC;wBAAO,MAAK;wBAAS,WAAU;;4BAC7B,YAAY,WAAW;4BAAM;;;;;;;oBAE/B,2BACC,6LAAC;wBAAO,MAAK;wBAAS,WAAU;wBAAgC,SAAS;4BAAQ,QAAQ,CAAC;4BAAI,aAAa;wBAAO;kCAAG;;;;;;;;;;;;0BAKzH,6LAAC;gBAAM,WAAU;;kCACf,6LAAC;kCACC,cAAA,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;8CAAa;;;;;;8CAC3B,6LAAC;oCAAG,WAAU;8CAAa;;;;;;8CAC3B,6LAAC;oCAAG,WAAU;8CAAa;;;;;;8CAC3B,6LAAC;oCAAG,WAAU;8CAAa;;;;;;8CAC3B,6LAAC;oCAAG,WAAU;8CAAa;;;;;;8CAC3B,6LAAC;oCAAG,WAAU;8CAAa;;;;;;;;;;;;;;;;;kCAG/B,6LAAC;kCACE,YAAY,GAAG,CAAC,CAAA,2BACf,6LAAC;;kDACC,6LAAC;wCAAG,WAAU;kDAAc,WAAW,IAAI;;;;;;kDAC3C,6LAAC;wCAAG,WAAU;kDAAc,WAAW,QAAQ;;;;;;kDAC/C,6LAAC;wCAAG,WAAU;;4CAAc,WAAW,eAAe,EAAE;4CAAK;4CAAG,WAAW,eAAe,EAAE;4CAAK;;;;;;;kDACjG,6LAAC;wCAAG,WAAU;kDAAc,WAAW,IAAI;;;;;;kDAC3C,6LAAC;wCAAG,WAAU;kDAAc,WAAW,QAAQ;;;;;;kDAC/C,6LAAC;wCAAG,WAAU;;0DACZ,6LAAC;gDAAO,WAAU;gDAAqB,SAAS,IAAM,WAAW;0DAAa;;;;;;0DAC9E,6LAAC;gDAAO,WAAU;gDAAe,SAAS,IAAM,aAAa,WAAW,EAAE;0DAAG;;;;;;;;;;;;;+BARxE,WAAW,EAAE;;;;;;;;;;;;;;;;;;;;;;AAgBlC;GAjIwB;KAAA","debugId":null}}]
}